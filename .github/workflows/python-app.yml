# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      mosquitto:
        image: eclipse-mosquitto:2.0
        ports:
          - 1883:1883
        options: >-
          --health-cmd "mosquitto_sub -t test/topic -C 1 -E -v || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install pip
      run: |
        python -m pip install --upgrade pip
    - name: Install Poetry
      uses: snok/install-poetry@v1.4.1
      with:
        version: 2.1.1
        virtualenvs-create: true
    - name: Configure poetry
      run: |
        poetry config virtualenvs.in-project true

    - name: Poetry Cache
      uses: actions/cache@v4
      id: poetry-cache
      with:
        path: .venv
        key: venv-${{ hashFiles('**/poetry.lock') }}

    # This is from <https://github.com/python-poetry/poetry/blob/639d5e057/.github/workflows/main.yml#L57-L60>
    - name: Ensure cache is healthy
      if: steps.poetry-cache.outputs.cache-hit == 'true'
      shell: bash
      run: |
        timeout 10s poetry run pip --version || rm -rf .venv

    - name: Install dependencies
      run: |
        poetry install

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        poetry run flake8 dicom_event_broker_adapter --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # --extend-ignore=203 because black puts in a space before a slicing :
        # while flake8 complains (this warning is not PEP 8 compliant), If W503 pops up, that should be disabled also
        poetry run flake8 --count --extend-ignore=E203 --max-line-length=127 --statistics dicom_event_broker_adapter
    - name: Create and copy Mosquitto config
      run: |
        CONTAINER_ID=$(docker ps -q --filter "ancestor=eclipse-mosquitto:2.0")
        docker exec ${CONTAINER_ID} sh -c "mkdir -p /mosquitto/config"
        docker cp ${{ github.workspace }}/tests/config/mosquitto.conf ${CONTAINER_ID}:/mosquitto/config/
        docker exec ${CONTAINER_ID} ls -la /mosquitto/config/
        docker exec ${CONTAINER_ID} cat /mosquitto/config/mosquitto.conf
        # Restart mosquitto to use the new config
        docker exec ${CONTAINER_ID} sh -c "pkill mosquitto || true"
        docker exec ${CONTAINER_ID} sh -c "mosquitto -c /mosquitto/config/mosquitto.conf -d"

    - name: Run unit tests with pytest
      run: |
        poetry run pytest tests --ignore=tests/test_mqtt_integration.py

    - name: Run integration tests with real Mosquitto
      run: |
        poetry run pytest tests/test_mqtt_integration.py -v
